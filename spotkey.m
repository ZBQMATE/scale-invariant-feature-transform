%step2, find key points on different scale spaces and positions
function RST = spotkey(SCALE_SPACE)
	
	tower = SCALE_SPACE.tower;
	difference_gaussian_tower = SCALE_SPACE.difference_gaussian_tower;
	
	[num_octave, num_scale] = size(tower);
	
	key_tower = cell(num_octave, num_scale-3);
	
	for i = 1 : num_octave
		for j = 2 : num_scale - 2
			
			%search 26 neighbours
			[len, wid] = size(difference_gaussian_tower{i, j});
			
			top = difference_gaussian_tower{i, j+1};
			mid = difference_gaussian_tower{i, j};
			btm = difference_gaussian_tower{i, j-1};
			
			jack_board = zeros(len, wid);
			
			for s = 2 : len - 1
				for t = 2 : wid - 1
					
					% smallest
					if mid(s,t) < mid(s+1,t) & ...
					   mid(s,t) < mid(s+1,t+1) & ...
					   mid(s,t) < mid(s+1,t-1) & ...
					   mid(s,t) < mid(s,t+1) & ...
					   mid(s,t) < mid(s,t-1) & ...
					   mid(s,t) < mid(s-1,t) & ...
					   mid(s,t) < mid(s-1,t+1) & ...
					   mid(s,t) < mid(s-1,t-1) & ...
					   mid(s,t) < top(s+1,t) & ...
					   mid(s,t) < top(s+1,t+1) & ...
					   mid(s,t) < top(s+1,t-1) & ...
					   mid(s,t) < top(s,t) & ...
					   mid(s,t) < top(s,t+1) & ...
					   mid(s,t) < top(s,t-1) & ...
					   mid(s,t) < top(s-1,t) & ...
					   mid(s,t) < top(s-1,t+1) & ...
					   mid(s,t) < top(s-1,t-1) & ...
					   mid(s,t) < btm(s+1,t) & ...
					   mid(s,t) < btm(s+1,t+1) & ...
					   mid(s,t) < btm(s+1,t-1) & ...
					   mid(s,t) < btm(s,t) & ...
					   mid(s,t) < btm(s,t+1) & ...
					   mid(s,t) < btm(s,t-1) & ...
					   mid(s,t) < btm(s-1,t) & ...
					   mid(s,t) < btm(s-1,t+1) & ...
					   mid(s,t) < btm(s-1,t-1)
						
						jack_board(s,t) = -100;
						
					end
					
					%largest
					if mid(s,t) > mid(s+1,t) & ...
					   mid(s,t) > mid(s+1,t+1) & ...
					   mid(s,t) > mid(s+1,t-1) & ...
					   mid(s,t) > mid(s,t+1) & ...
					   mid(s,t) > mid(s,t-1) & ...
					   mid(s,t) > mid(s-1,t) & ...
					   mid(s,t) > mid(s-1,t+1) & ...
					   mid(s,t) > mid(s-1,t-1) & ...
					   mid(s,t) > top(s+1,t) & ...
					   mid(s,t) > top(s+1,t+1) & ...
					   mid(s,t) > top(s+1,t-1) & ...
					   mid(s,t) > top(s,t) & ...
					   mid(s,t) > top(s,t+1) & ...
					   mid(s,t) > top(s,t-1) & ...
					   mid(s,t) > top(s-1,t) & ...
					   mid(s,t) > top(s-1,t+1) & ...
					   mid(s,t) > top(s-1,t-1) & ...
					   mid(s,t) > btm(s+1,t) & ...
					   mid(s,t) > btm(s+1,t+1) & ...
					   mid(s,t) > btm(s+1,t-1) & ...
					   mid(s,t) > btm(s,t) & ...
					   mid(s,t) > btm(s,t+1) & ...
					   mid(s,t) > btm(s,t-1) & ...
					   mid(s,t) > btm(s-1,t) & ...
					   mid(s,t) > btm(s-1,t+1) & ...
					   mid(s,t) > btm(s-1,t-1)
						
						jack_board(s,t) = 100;
						
					end
					
				end
			end
			
			
			key_tower{i, j-1} = jack_board;
			
		end
	end
	
	RST = key_tower;